name: Continuous Integration

on: 
  push:
    branches:
      - cloud-build-setup


env:
  PROJECT_ID: alertmanager-cloudmon-test
  RUN_REGION: us-west1
  SERVICE_NAME: pubsub_endpoint
  ACCOUNT: cloud-registry-push-accessor@alertmanager-cloudmon-test.iam.gserviceaccount.com

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: [3.6, 3.7]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        project_id: $PROJECT_ID
        export_default_credentials: true
    - uses: GoogleCloudPlatform/github-actions/get-secretmanager-secrets@master
      with:
        secrets: |-
          key:$PROJECT_ID/cloud-registry-push-key
    
    # Set gcloud project and account
    - name: GCloud auth
      run: |-
        gcloud info
        # gcloud config set project $PROJECT_ID
        gcloud auth activate-service-account ACCOUNT --key-file=${{steps.secrets.outputs.key}}
        gcloud config set account $ACCOUNT
        
    # Build and push image to Google Container Registry
    - name: Build image
      run: |-
        gcloud builds submit \
          --quiet \
          --tag "gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA"

    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test with pytest
      run: export FLASK_APP_ENV=test; pytest

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with pylint
      run: export FLASK_APP_ENV=test; pylint script/ tests/ notification_delivery/ external_integrations/ --disable=C0116,E1101,R0903,C0115,C0103,C0301,C0114,W0621,W0511,E0611,R0801
